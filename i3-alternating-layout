#!/usr/bin/env python3

import argparse
import sys
import os
from i3ipc import Connection, Event
from functools import partial


def find_parent(i3, window_id):
    """
        Find the parent of a given window id
    """

    def finder(con, parent):
        if con.id == window_id:
            return parent
        for node in con.nodes:
            res = finder(node, con)
            if res:
                return res
        return None

    return finder(i3.get_tree(), None)


def set_layout(max_aspect_ratio, i3, e):
    """
        Set the layout/split for the currently
        focused window to either vertical or
        horizontal, depending on its width/height,
        and desired aspect ratio
    """
    win = i3.get_tree().find_focused()
    parent = find_parent(i3, win.id)

    if (parent and parent.layout != 'tabbed'
            and parent.layout != 'stacked'):

        if win.rect.height > win.rect.width / max_aspect_ratio:
            if parent.orientation == 'horizontal':
                i3.command('split v')
        else:
            if parent.orientation == 'vertical':
                i3.command('split h')


def main():
    """
    Main function - listen for window focus
        changes and call set_layout when focus
        changes
    """
    parser = argparse.ArgumentParser(
        prog="i3-alternating-layout",
        usage="Script to open new windows in i3wm/sway using alternating layouts (splith/splitv) for each new window"
    )

    parser.add_argument("--pid-file", "-p", help="path/to/pid.file   Saves the PID for this program in the filename specified")
    parser.add_argument("--split-ratio", "-r", type=float, default=1.0, help="Maximum aspect ratio allowed before changing to splitv.")

    args = parser.parse_args()

    if args.pid_file:
        with open(args.pid_file, 'w') as f:
            f.write(str(os.getpid()))

    i3 = Connection()
    i3.on(Event.WINDOW_FOCUS, partial(set_layout, args.split_ratio))
    i3.main()


if __name__ == "__main__":
    main()
